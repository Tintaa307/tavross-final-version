generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String
  emailVerified Boolean   @default(false)
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  rutines       Rutines[]
  Account       Account[]
  Session       Session[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], name: "userId")
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], name: "userId")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String   @unique @db.VarChar(512)
  token      String   @db.Text
  expires    DateTime
}

model Rutines {
  id              Int               @id @default(autoincrement())
  name            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userId          Int
  user            User              @relation(fields: [userId], references: [id])
  rutineExercises RutineExercises[]

  @@index([userId], name: "userId")
}

model RutineExercises {
  id        Int      @id @default(autoincrement())
  name      String
  weight    Int
  reps      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rutinesId Int?
  Rutines   Rutines? @relation(fields: [rutinesId], references: [id])

  @@index([rutinesId], name: "rutineId")
}
